// Draws the first picture only for a brief moment after the second one with the service / task is
// generated and draws the second one directly afterwards.
// This would be the way to do it though: http://docs.oracle.com/javase/8/javafx/interoperability-tutorial/concurrency.htm

ImageService service = new ImageService();
		        service.setOnSucceeded(new EventHandler<WorkerStateEvent>() {
		            @Override
		            public void handle(WorkerStateEvent event) {
		            	gc.drawImage((Image)event.getSource().getValue(), 0, 0);
//		            	try {
//							Thread.sleep(5000);
//						} catch (InterruptedException e) {
//							e.printStackTrace();
//							System.exit(1);
//						}
		            	//service.start();
		            }
		        });
		        service.start();
		        
		        
class ImageService extends Service<Image> {
        @Override
        protected Task<Image> createTask() {
            return new Task<Image>() {
                @Override
                protected Image call() {
                	generateRandomState();
					Image img = calculateImageWrapper();
					return img;
                }
            };
        }
	}